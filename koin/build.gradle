plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.appdistribution'
    id 'com.google.dagger.hilt.android'
}

def applicationName = 'koin'

android {
    defaultConfig {
        namespace "in.koreatech.koin"
        applicationId "in.koreatech.koin"
        versionCode project.minVersionCode
        minSdkVersion project.minSdkVersion
        compileSdk project.compileSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionName project.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [naverMapKey: getNaverMapKey()]
    }

    signingConfigs {
        release {
            storeFile file("./team_kap_android.jks")
            storePassword getPassword()
            keyAlias "koin_release_key"
            keyPassword getPassword()
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG", "true"
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG", "false"
            signingConfig signingConfigs.release
            firebaseAppDistribution {
                artifactType = "AAB"
                releaseNotes = "${project.versionName} release"
                groups = "bcsd"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    buildFeatures {
        dataBinding true
    }
}

def getPassword() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty('koin_store_password')
}

def getNaverMapKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty('navermap_key')
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':core')
    implementation project(':data')
    implementation project(':domain')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    androidTestImplementation 'androidx.test:runner:1.5.2'

    implementation("com.google.guava:guava:33.0.0-android")

    /* Dependency - glide */
    implementation libs.glide
    kapt libs.glide.compiler

    /* Dependency - butterknife */
    implementation libs.butterknife
    kapt libs.butterknife.compiler

    //naver map
    implementation libs.map.sdk

    // https://github.com/irshuLx/Android-WYSIWYG-Editor
    implementation libs.laser.native.editor
    implementation libs.colorpicker
    implementation libs.photoview
    implementation libs.hilt.android
    kapt libs.hilt.compiler

    implementation(platform(libs.firebase.bom))
    implementation(libs.firebase.crashlytics)
    implementation(libs.firebase.analytics)
    implementation(libs.firebase.database)
    implementation(libs.firebase.perf)
    implementation(libs.firebase.analytics)
}
